#!/usr/bin/env ruby
require_relative '../lib/linters.rb'
require_relative '../lib/processor.rb'

class Messages
  def total_lines_message(count)
    puts "\nError - Metrics/LineLength: Your File is too long [#{count}, 100]"
  end

  def blank_error_message
    puts "\nError - Blank line at the beginning of the script"
  end

  def line_length_error(line, index)
    puts "\nError - Metrics/LineLength: Line #{index + 1} is too long [#{line.lenw gth + 1}, 120]"
  end

  def brackets_error(index)
    puts "\nError - Missing a bracket ('[]' - '()' - '{}') at line #{index + 1}"
  end

  def success_message(method)
    puts "\nCongrats - No error with the #{method} in your file."
  end
end

linter_bad = Linter.new('examples/bad_example')
linter_good = Linter.new('examples/good_example')

puts "\nWelcome to this simple Linter.\n" \
     "\nThis linter will check the following mistakes in your code:\n" \
     "1. Error - If you are missing a bracket.\n" \
     "2. Error - If the first line on your file is a blank line.\n" \
     "3. Error - If the total lines on your file (Including blank spaces) is bigger than 100.\n" \
     "4. Error - If the total characters on a single line (Including blank spaces) are bigger than 120.\n"

puts "\n\nHere you will see the results of a script with errors: \n"
linter_bad.match_brackets
linter_bad.line_length
linter_bad.counting_lines
linter_bad.blank_line

puts "\n\nHere you will see the results of a script with NO errors: \n"
linter_good.match_brackets
linter_good.line_length
linter_good.counting_lines
linter_good.blank_line
