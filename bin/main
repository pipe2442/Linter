#!/usr/bin/env ruby
require_relative '../lib/linters.rb'
require_relative '../lib/processor.rb'

class Messages
  def total_lines_message(count)
    puts "\nError - Your code lenght is #{count} -" \
         'The maximum total length of your file should be 100 lines.'
  end

  def total_lines_success
    puts "\nCongrats - No error with the total lines in your file."
  end

  def blank_error_message
    puts "\nError - Blank line at the beginning of the script"
  end

  def line_length_error(line, index)
    puts "\nError - Length of line #{index + 1} is #{line.length} - The max single line length is 120"
  end

  def line_length_success
    puts "\nCongrats - No error with single lines length."
  end

  def blank_success_message
    puts "\nCongrats - No blank line at the beginning of the script."
  end

  def brackets_error(j)
    puts "\nError - Missing a bracket ('[]' - '()' - '{}') at line #{j + 1}"
  end

  def brackets_success
    puts "\nCongrats - No error with brackets in your file."
  end
end

linter_bad = Linter.new('examples/bad_example')
linter_good = Linter.new('examples/good_example')

puts "\nWelcome to this simple Linter.\n" \
     "\nThis linter will check the following mistakes in your code:\n" \
     "1. He will return each line in wich you are missing a bracket.\n" \
     "2. He will return an error if the first line on your file is a blank line.\n" \
     "3. He will return an error if the total lines on your file are bigger than 100.\n" \
     "4. He will return an error if the total lines on a single line are bigger than 120.\n"

puts "\n\nHere you will see the results of a script with errors: \n"
linter_bad.match_brackets
linter_bad.line_length
linter_bad.counting_lines
linter_bad.blank_line

puts "\n\nHere you will see the results of a script with NO errors: \n"
linter_good.match_brackets
linter_good.line_length
linter_good.counting_lines
linter_good.blank_line
